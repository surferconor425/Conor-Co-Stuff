buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
        //maven { // the repo from which to get NEI and stuff
        //    name 'CB Repo'
        //    url "http://chickenbones.net/maven/"
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'

    }
}

ext.configFile = file "build.properties"

configFile.withReader {
    def prop = new Properties()
    prop.load(it)
    project.ext.config = new ConfigSlurper().parse prop
}

apply plugin : 'java'
apply plugin: 'forge'
apply plugin: 'curseforge'

version = config.mod_version
group= "com.surferconor425.ConorCo" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "ConorCo-Stuff"

minecraft {
    version = "1.7.10-10.13.4.1492-1.7.10"
    runDir = "eclipse"
    replaceIn "reference/MainRef.java"
    replace "@MOD_VERSION@", "1.1.1"
}
version = "1.7.10-1.1.1"

curse {
    projectId = '230425'
    apiKey = project.curseForgeApiKey
    releaseType = 'alpha'
    addGameVersion '1.7.10'
}

dependencies {
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"


    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

}

processResources
        {
            // this will ensure that this task is redone when the versions change.
            inputs.property "version", project.version
            inputs.property "mcversion", project.minecraft.version

            // replace stuff in mcmod.info, nothing else
            from(sourceSets.main.resources.srcDirs) {
                include '*.info'

                // replace version and mcversion
                expand 'mod_version': project.version, 'minecraft_version': project.config.minecraft_version, 'forge_version': project.config.forge_version

                // copy everything else, thats not the mcmod.info
                from(sourceSets.main.resources.srcDirs) {
                    exclude '**/*.info'
                }
            }

        }
